@* Areas/Admin/Views/Authors/Index.cshtml *@

@model BookShop.Helpers.PaginatedList<BookShop.Models.Author>
@{
    ViewData["Title"] = "Author Management";
}

<div class="container">
    <h1 class="mb-4">Author Management</h1>

    <div class="d-flex justify-content-between mb-3">
        @* <div>
            @* Create button is disabled as this will be part of the seller workflow
            <a asp-action="Create" class="btn btn-primary disabled">Create New Author</a>
            <small class="text-muted d-block mt-1">Authors are created during book submission</small>
        </div> *@
        <div class="col-md-4">
            <form asp-action="Index" method="get" class="d-flex">
                <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control me-2" placeholder="Search by name, last name or country" />
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </form>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    First Name
                                    @if (string.IsNullOrEmpty((string)ViewData["CurrentSort"]))
                                    {
                                        <i class="bi bi-arrow-up-short"></i>
                                    }
                                    else if ((string)ViewData["CurrentSort"] == "name_desc")
                                    {
                                        <i class="bi bi-arrow-down-short"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Last Name
                                    @if ((string)ViewData["CurrentSort"] == "lastname")
                                    {
                                        <i class="bi bi-arrow-up-short"></i>
                                    }
                                    else if ((string)ViewData["CurrentSort"] == "lastname_desc")
                                    {
                                        <i class="bi bi-arrow-down-short"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["CountrySortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Country
                                    @if ((string)ViewData["CurrentSort"] == "country")
                                    {
                                        <i class="bi bi-arrow-up-short"></i>
                                    }
                                    else if ((string)ViewData["CurrentSort"] == "country_desc")
                                    {
                                        <i class="bi bi-arrow-down-short"></i>
                                    }
                                </a>
                            </th>
                            <th>Birth Date</th>
                            <th>Death Date</th>
                            <th>Books</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var author in Model)
                        {
                            <tr>
                                <td>@author.AuthorId</td>
                                <td>@author.Name</td>
                                <td>@author.LastName</td>
                                <td>@author.Country</td>
                                <td>@(author.BirthDate.HasValue ? author.BirthDate.Value.ToShortDateString() : "N/A")</td>
                                <td>@(author.DeathDate.HasValue ? author.DeathDate.Value.ToShortDateString() : "N/A")</td>
                                <td>@author.Products.Count</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@author.AuthorId" class="btn btn-sm btn-primary">Edit</a>
                                        <a asp-action="Details" asp-route-id="@author.AuthorId" class="btn btn-sm btn-info">Details</a>
                                        <a asp-action="Delete" asp-route-id="@author.AuthorId" class="btn btn-sm btn-danger">Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }
                    <li class="page-item @prevDisabled">
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="page-link">
                            Previous
                        </a>
                    </li>

                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@i"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="page-link">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @nextDisabled">
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="page-link">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Add Bootstrap Icons for sorting indicators -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
}